(ns aoc-2022.day04.solution
  (:require [clojure.string :as str]
            [clojure.set]))
nil
clj꞉aoc-2022.day04.solution꞉> 
(def input-test (str/trim (slurp "./src/aoc_2022/day04/input_test")))

#'aoc-2022.day04.solution/input-test
clj꞉aoc-2022.day04.solution꞉> 
(defn transpose [matrix]
  (apply mapv vector matrix))
#'aoc-2022.day04.solution/transpose
clj꞉aoc-2022.day04.solution꞉> 
(def pairs (for [pair (str/split input-test #"\n")]
             (into [] (for [sections (str/split pair #",")] sections))))
#'aoc-2022.day04.solution/pairs
clj꞉aoc-2022.day04.solution꞉> 
(def split-pairs (for [pair pairs]
                   (map #(str/split % #"-") pair)))
#'aoc-2022.day04.solution/split-pairs
clj꞉aoc-2022.day04.solution꞉> 
(defn subset-of-other [set-pair]
  (let [[a b] set-pair]
    (or (clojure.set/subset? a b) (clojure.set/subset? b a))))
#'aoc-2022.day04.solution/subset-of-other
clj꞉aoc-2022.day04.solution꞉> 
(->> (map #(Integer/parseInt %) (flatten split-pairs))
     (partition 2)
     (transpose)
     (apply map #(range %1 (+ %2 1)))
     (map set)
     (partition 2)
     (filter subset-of-other))
((#{7 4 6 3 2 5 8} #{7 4 6 3 5}) (#{6} #{4 6 5}))
clj꞉aoc-2022.day04.solution꞉> 
(->> (map #(Integer/parseInt %) (flatten split-pairs))
     (partition 2)
     (transpose)
     (apply map #(range %1 (+ %2 1)))
     (map set)
     (partition 2)
     (filter subset-of-other)
     (count))
2
clj꞉aoc-2022.day04.solution꞉> 
(def input-real (str/trim (slurp "./src/aoc_2022/day04/input_real")))
#'aoc-2022.day04.solution/input-real
clj꞉aoc-2022.day04.solution꞉> 
(def pairs (for [pair (str/split input-real #"\n")]
             (into [] (for [sections (str/split pair #",")] sections))))

#'aoc-2022.day04.solution/pairs
clj꞉aoc-2022.day04.solution꞉> 
(def split-pairs (for [pair pairs]
                   (map #(str/split % #"-") pair)))

#'aoc-2022.day04.solution/split-pairs
clj꞉aoc-2022.day04.solution꞉> 
(->> (map #(Integer/parseInt %) (flatten split-pairs))
     (partition 2)
     (transpose)
     (apply map #(range %1 (+ %2 1)))
     (map set)
     (partition 2)
     (filter subset-of-other)
     (count))
; Execution error (NumberFormatException) at java.lang.NumberFormatException/forInputString (NumberFormatException.java:65).
; For input string: "jVTBgVbgJQVrTLRRsLvRzWcZvnDs"
clj꞉aoc-2022.day04.solution꞉> 
(def pairs (for [pair (str/split input-real #"\n")]
             (into [] (for [sections (str/split pair #",")] sections))))
#'aoc-2022.day04.solution/pairs
clj꞉aoc-2022.day04.solution꞉> 
pairs
(["jVTBgVbgJQVrTLRRsLvRzWcZvnDs"]
 ["dhtmhfdfNlNNldfqmPCflqGbNZDHsDWcRzvczWsczZNzHz"]
 ["tmwwwCCfbJSMbwMb"]
 ["hsrZZhHlhrHmPPbMbDFDQdnQgLfMFDdDQQ"]
 ["GpBtwtqrcCcjgnLgqfgDDgRn"]
 ["cJwVwpCpGJctJtBcCrSCGrVJhlsbvSvTvbmHmmsWmHslmsHm"]
 ["gCtWJvmfmGGwVVMhJw"]
 ["nzRSpZbSVFFRDFSDzcplddqplqMhQMclMp"]
 ["zFLszzRTDnZnbTZTRZsVNgCjrvfvgtvNmtfvLW"]
 ["glRQRpQQtQtGtQws"]
 ["TnmbLqvBFRFFLPBFnPbvRBhshTtHWhwzdwtHdsdzWhws"]
 ["qmCLPNmCFnLBnmPPqVbFLRrJjVggDgJjlZVVDjDlDD"]
 ["vRRgpWvPQFdTFDDNQs"]
 ["bqtCmltmlbwqLVLZqwtmLBBTMcGBddTTBgFNGcZGMD"]
 ["bbtmJmjlVlwblwwbwzbbvrrznvzShgRhRvhfWrWn"]
 ["ZMhThfNcpbbMNNjsHpmpsRqsPmRs"]
 ["wQjDgggQDPqqDlsD"]
 ["SCwSzvLVCSVtQVgLnrccfdGdTdZfcZMtjJhG"]
 ["wNnNmNHnNPPwwPGCrLSZZvdVVZvBtMMvdm"]
 ["WQzlhzjzbBtMMlBrMl"]
 ["szbgWhJjTTcsWTqgzsqcsGHfwNcwfwnHHrCGCPPGwr"]
 ["CNsbpFCMSrmDhQHNNGmH"]
 ["fQPPPcqvljQzjVDDgRBhGGqDgqqD"]
 ["ZctlcVzcfltQtnrndbQMCM"]
 ["NQjQjQvZvZjcvrrrNjgTQgBQwTJsJswJlbGstqqtmGhmwhqw"]
 ["PWpHRzRnPHHSCnPFwlqhbtqGZClJqGqG"]
 ["ZzVpMpWPHnVzzpWzDRzSZrcdDQdrQNrcQgQfjcNfjf"]
 ["BSZMtdtZBzMFvhCbBJDbhDDC"]
 ["qcqVVmccrmVcjrlHqTrjDJRPQhWvPWWfPvblffDf"]
 ["cHTrbGwpmGwVjdFMnzpLznMztd"]
 ["DGDGGbNgTgJQQLMRMMTNVzvPsPbdsfPVsdVVZfPf"]
 ["lcCmmlpwwnwSjCHtFpCpHzCrZsVrBZZzdvDfVrsfZd"]
 ["lSHwnjpFmppHqppttttcFmnhMLGNRLhTMDqJLQNLLQNLhJ"]
 ["WqWfDWBjBjLbfcbbqGbWqQsrFFztsppMFCzgCJzJCrFpCM"]
 ["VRlhdHZTZVRRmZwlmFrJwFpMMDDrrrtJwg"]
 ["PPVddvvDZmRmHvndTHmLcbcjSjLQBGWGGQWSqP"]
 ["HHvgvwHMPMwHwmcRfJNFchFGNNCm"]
 ["BsTDsjzBCCBJGffN"]
 ["jznSnSdqzqnQTbdDljQjQSMHWWvvgWvtZlrWpPfWwtPr"]
 ["DJCJJCNjCDRfDfDRhDnNhfjFPgbGbddBTjFdTFTPbgGSdF"]
 ["cmMcMVqBZVcwsGFgGqgWdFqb"]
 ["vcZVzwmHVcrtrwMMvvmBHwNNCDpQRfhLhrNJNfJDDDRC"]
 ["VWSSScsncpDRdnsWsVncVzTwMMMHtMTrLTLMMVHM"]
 ["fjJvQqBCQNhfQlZZnqmFHLFMTFTzwzLzrHMB"]
 ["CqfjjQZJPjjvpRppDPgbnSnP"]
 ["tLnjNwjRWttdCwRLsfGzfzPbzbWbQQPT"]
 ["cvvBvlBrFrlTffsbfTqZ"]
 ["vmrFpsrvFMMMNwhtDwhN"]
 ["wzgRNqwtgzMWtqGwCssBBSBZnSRsrQQS"]
 ["bbjLTmpjpHcpVncVdmffPCDrjZDSDsZffDQC"]
 ...)
clj꞉aoc-2022.day04.solution꞉> 
(def split-pairs (for [pair pairs]
                   (map #(str/split % #"-") pair)))
#'aoc-2022.day04.solution/split-pairs
clj꞉aoc-2022.day04.solution꞉> 
split-pairs
((["jVTBgVbgJQVrTLRRsLvRzWcZvnDs"])
 (["dhtmhfdfNlNNldfqmPCflqGbNZDHsDWcRzvczWsczZNzHz"])
 (["tmwwwCCfbJSMbwMb"])
 (["hsrZZhHlhrHmPPbMbDFDQdnQgLfMFDdDQQ"])
 (["GpBtwtqrcCcjgnLgqfgDDgRn"])
 (["cJwVwpCpGJctJtBcCrSCGrVJhlsbvSvTvbmHmmsWmHslmsHm"])
 (["gCtWJvmfmGGwVVMhJw"])
 (["nzRSpZbSVFFRDFSDzcplddqplqMhQMclMp"])
 (["zFLszzRTDnZnbTZTRZsVNgCjrvfvgtvNmtfvLW"])
 (["glRQRpQQtQtGtQws"])
 (["TnmbLqvBFRFFLPBFnPbvRBhshTtHWhwzdwtHdsdzWhws"])
 (["qmCLPNmCFnLBnmPPqVbFLRrJjVggDgJjlZVVDjDlDD"])
 (["vRRgpWvPQFdTFDDNQs"])
 (["bqtCmltmlbwqLVLZqwtmLBBTMcGBddTTBgFNGcZGMD"])
 (["bbtmJmjlVlwblwwbwzbbvrrznvzShgRhRvhfWrWn"])
 (["ZMhThfNcpbbMNNjsHpmpsRqsPmRs"])
 (["wQjDgggQDPqqDlsD"])
 (["SCwSzvLVCSVtQVgLnrccfdGdTdZfcZMtjJhG"])
 (["wNnNmNHnNPPwwPGCrLSZZvdVVZvBtMMvdm"])
 (["WQzlhzjzbBtMMlBrMl"])
 (["szbgWhJjTTcsWTqgzsqcsGHfwNcwfwnHHrCGCPPGwr"])
 (["CNsbpFCMSrmDhQHNNGmH"])
 (["fQPPPcqvljQzjVDDgRBhGGqDgqqD"])
 (["ZctlcVzcfltQtnrndbQMCM"])
 (["NQjQjQvZvZjcvrrrNjgTQgBQwTJsJswJlbGstqqtmGhmwhqw"])
 (["PWpHRzRnPHHSCnPFwlqhbtqGZClJqGqG"])
 (["ZzVpMpWPHnVzzpWzDRzSZrcdDQdrQNrcQgQfjcNfjf"])
 (["BSZMtdtZBzMFvhCbBJDbhDDC"])
 (["qcqVVmccrmVcjrlHqTrjDJRPQhWvPWWfPvblffDf"])
 (["cHTrbGwpmGwVjdFMnzpLznMztd"])
 (["DGDGGbNgTgJQQLMRMMTNVzvPsPbdsfPVsdVVZfPf"])
 (["lcCmmlpwwnwSjCHtFpCpHzCrZsVrBZZzdvDfVrsfZd"])
 (["lSHwnjpFmppHqppttttcFmnhMLGNRLhTMDqJLQNLLQNLhJ"])
 (["WqWfDWBjBjLbfcbbqGbWqQsrFFztsppMFCzgCJzJCrFpCM"])
 (["VRlhdHZTZVRRmZwlmFrJwFpMMDDrrrtJwg"])
 (["PPVddvvDZmRmHvndTHmLcbcjSjLQBGWGGQWSqP"])
 (["HHvgvwHMPMwHwmcRfJNFchFGNNCm"])
 (["BsTDsjzBCCBJGffN"])
 (["jznSnSdqzqnQTbdDljQjQSMHWWvvgWvtZlrWpPfWwtPr"])
 (["DJCJJCNjCDRfDfDRhDnNhfjFPgbGbddBTjFdTFTPbgGSdF"])
 (["cmMcMVqBZVcwsGFgGqgWdFqb"])
 (["vcZVzwmHVcrtrwMMvvmBHwNNCDpQRfhLhrNJNfJDDDRC"])
 (["VWSSScsncpDRdnsWsVncVzTwMMMHtMTrLTLMMVHM"])
 (["fjJvQqBCQNhfQlZZnqmFHLFMTFTzwzLzrHMB"])
 (["CqfjjQZJPjjvpRppDPgbnSnP"])
 (["tLnjNwjRWttdCwRLsfGzfzPbzbWbQQPT"])
 (["cvvBvlBrFrlTffsbfTqZ"])
 (["vmrFpsrvFMMMNwhtDwhN"])
 (["wzgRNqwtgzMWtqGwCssBBSBZnSRsrQQS"])
 (["bbjLTmpjpHcpVncVdmffPCDrjZDSDsZffDQC"])
 ...)
clj꞉aoc-2022.day04.solution꞉> 
(def input-real (str/trim (slurp "./src/aoc_2022/day04/input_real")))
#'aoc-2022.day04.solution/input-real
clj꞉aoc-2022.day04.solution꞉> 
(def pairs (for [pair (str/split input-real #"\n")]
             (into [] (for [sections (str/split pair #",")] sections))))
#'aoc-2022.day04.solution/pairs
clj꞉aoc-2022.day04.solution꞉> 
pairs
(["jVTBgVbgJQVrTLRRsLvRzWcZvnDs"]
 ["dhtmhfdfNlNNldfqmPCflqGbNZDHsDWcRzvczWsczZNzHz"]
 ["tmwwwCCfbJSMbwMb"]
 ["hsrZZhHlhrHmPPbMbDFDQdnQgLfMFDdDQQ"]
 ["GpBtwtqrcCcjgnLgqfgDDgRn"]
 ["cJwVwpCpGJctJtBcCrSCGrVJhlsbvSvTvbmHmmsWmHslmsHm"]
 ["gCtWJvmfmGGwVVMhJw"]
 ["nzRSpZbSVFFRDFSDzcplddqplqMhQMclMp"]
 ["zFLszzRTDnZnbTZTRZsVNgCjrvfvgtvNmtfvLW"]
 ["glRQRpQQtQtGtQws"]
 ["TnmbLqvBFRFFLPBFnPbvRBhshTtHWhwzdwtHdsdzWhws"]
 ["qmCLPNmCFnLBnmPPqVbFLRrJjVggDgJjlZVVDjDlDD"]
 ["vRRgpWvPQFdTFDDNQs"]
 ["bqtCmltmlbwqLVLZqwtmLBBTMcGBddTTBgFNGcZGMD"]
 ["bbtmJmjlVlwblwwbwzbbvrrznvzShgRhRvhfWrWn"]
 ["ZMhThfNcpbbMNNjsHpmpsRqsPmRs"]
 ["wQjDgggQDPqqDlsD"]
 ["SCwSzvLVCSVtQVgLnrccfdGdTdZfcZMtjJhG"]
 ["wNnNmNHnNPPwwPGCrLSZZvdVVZvBtMMvdm"]
 ["WQzlhzjzbBtMMlBrMl"]
 ["szbgWhJjTTcsWTqgzsqcsGHfwNcwfwnHHrCGCPPGwr"]
 ["CNsbpFCMSrmDhQHNNGmH"]
 ["fQPPPcqvljQzjVDDgRBhGGqDgqqD"]
 ["ZctlcVzcfltQtnrndbQMCM"]
 ["NQjQjQvZvZjcvrrrNjgTQgBQwTJsJswJlbGstqqtmGhmwhqw"]
 ["PWpHRzRnPHHSCnPFwlqhbtqGZClJqGqG"]
 ["ZzVpMpWPHnVzzpWzDRzSZrcdDQdrQNrcQgQfjcNfjf"]
 ["BSZMtdtZBzMFvhCbBJDbhDDC"]
 ["qcqVVmccrmVcjrlHqTrjDJRPQhWvPWWfPvblffDf"]
 ["cHTrbGwpmGwVjdFMnzpLznMztd"]
 ["DGDGGbNgTgJQQLMRMMTNVzvPsPbdsfPVsdVVZfPf"]
 ["lcCmmlpwwnwSjCHtFpCpHzCrZsVrBZZzdvDfVrsfZd"]
 ["lSHwnjpFmppHqppttttcFmnhMLGNRLhTMDqJLQNLLQNLhJ"]
 ["WqWfDWBjBjLbfcbbqGbWqQsrFFztsppMFCzgCJzJCrFpCM"]
 ["VRlhdHZTZVRRmZwlmFrJwFpMMDDrrrtJwg"]
 ["PPVddvvDZmRmHvndTHmLcbcjSjLQBGWGGQWSqP"]
 ["HHvgvwHMPMwHwmcRfJNFchFGNNCm"]
 ["BsTDsjzBCCBJGffN"]
 ["jznSnSdqzqnQTbdDljQjQSMHWWvvgWvtZlrWpPfWwtPr"]
 ["DJCJJCNjCDRfDfDRhDnNhfjFPgbGbddBTjFdTFTPbpaGSdF"]
 ["cmMcMVqBZVcwsGFgGqgWdFqb"]
 ["vcZVzwmHVcrtrwMMvvmBHwNNCDpQRfhLhrNJNfJDDDRC"]
 ["VWSSScsncpDRdnsWsVncVzTwMMMHtMTrLTLMMVHM"]
 ["fjJvQqBCQNhfQlZZnqmFHLFMTFTzwzLzrHMB"]
 ["CqfjjQZJPjjvpRppDPgbnSnP"]
 ["tLnjNwjRWttdCwRLsfGzfzPbzbWbQQPT"]
 ["cvvBvlBrFrlTffsbfTqZ"]
 ["vmrFpsrvFMMMNwhtDwhN"]
 ["wzgRNqwtgzMWtqGwCssBBSBZnSRsrQQS"]
 ["bbjLTmpjpHcpVncVdmffPCDrjZDSDsZffDQC"]
 ...)
clj꞉aoc-2022.day04.solution꞉> 
(def pairs (for [pair (str/split input-test #"\n")]
             (into [] (for [sections (str/split pair #",")] sections))))
#'aoc-2022.day04.solution/pairs
clj꞉aoc-2022.day04.solution꞉> 
#'aoc-2022.day04.solution/pairs
clj꞉aoc-2022.day04.solution꞉> 
pairs
(["2-4" "6-8"] ["2-3" "4-5"] ["5-7" "7-9"] ["2-8" "3-7"] ["6-6" "4-6"] ["2-6" "4-8"])
clj꞉aoc-2022.day04.solution꞉> 

(def pairs (for [pair (str/split input-real #"\n")]
             (into [] (for [sections (str/split pair #",")] sections))))
#'aoc-2022.day04.solution/pairs
clj꞉aoc-2022.day04.solution꞉> 
(->> (map #(Integer/parseInt %) (flatten split-pairs))
     (partition 2)
     (transpose)
     (apply map #(range %1 (+ %2 1)))
     (map set)
     (partition 2)
     (filter subset-of-other)
     (count))

; Execution error (NumberFormatException) at java.lang.NumberFormatException/forInputString (NumberFormatException.java:65).
; For input string: "jVTBgVbgJQVrTLRRsLvRzWcZvnDs"
clj꞉aoc-2022.day04.solution꞉> 
(def pairs (for [pair (str/split input-real #"\n")]
             (into [] (for [sections (str/split pair #",")] sections))))
#'aoc-2022.day04.solution/pairs
clj꞉aoc-2022.day04.solution꞉> 
(def split-pairs (for [pair pairs]
                   (map #(str/split % #"-") pair)))
#'aoc-2022.day04.solution/split-pairs
clj꞉aoc-2022.day04.solution꞉> split-pairs
((["jVTBgVbgJQVrTLRRsLvRzWcZvnDs"])
 (["dhtmhfdfNlNNldfqmPCflqGbNZDHsDWcRzvczWsczZNzHz"])
 (["tmwwwCCfbJSMbwMb"])
 (["hsrZZhHlhrHmPPbMbDFDQdnQgLfMFDdDQQ"])
 (["GpBtwtqrcCcjgnLgqfgDDgRn"])
 (["cJwVwpCpGJctJtBcCrSCGrVJhlsbvSvTvbmHmmsWmHslmsHm"])
 (["gCtWJvmfmGGwVVMhJw"])
 (["nzRSpZbSVFFRDFSDzcplddqplqMhQMclMp"])
 (["zFLszzRTDnZnbTZTRZsVNgCjrvfvgtvNmtfvLW"])
 (["glRQRpQQtQtGtQws"])
 (["TnmbLqvBFRFFLPBFnPbvRBhshTtHWhwzdwtHdsdzWhws"])
 (["qmCLPNmCFnLBnmPPqVbFLRrJjVggDgJjlZVVDjDlDD"])
 (["vRRgpWvPQFdTFDDNQs"])
 (["bqtCmltmlbwqLVLZqwtmLBBTMcGBddTTBgFNGcZGMD"])
 (["bbtmJmjlVlwblwwbwzbbvrrznvzShgRhRvhfWrWn"])
 (["ZMhThfNcpbbMNNjsHpmpsRqsPmRs"])
 (["wQjDgggQDPqqDlsD"])
 (["SCwSzvLVCSVtQVgLnrccfdGdTdZfcZMtjJhG"])
 (["wNnNmNHnNPPwwPGCrLSZZvdVVZvBtMMvdm"])
 (["WQzlhzjzbBtMMlBrMl"])
 (["szbgWhJjTTcsWTqgzsqcsGHfwNcwfwnHHrCGCPPGwr"])
 (["CNsbpFCMSrmDhQHNNGmH"])
 (["fQPPPcqvljQzjVDDgRBhGGqDgqqD"])
 (["ZctlcVzcfltQtnrndbQMCM"])
 (["NQjQjQvZvZjcvrrrNjgTQgBQwTJsJswJlbGstqqtmGhmwhqw"])
 (["PWpHRzRnPHHSCnPFwlqhbtqGZClJqGqG"])
 (["ZzVpMpWPHnVzzpWzDRzSZrcdDQdrQNrcQgQfjcNfjf"])
 (["BSZMtdtZBzMFvhCbBJDbhDDC"])
 (["qcqVVmccrmVcjrlHqTrjDJRPQhWvPWWfPvblffDf"])
 (["cHTrbGwpmGwVjdFMnzpLznMztd"])
 (["DGDGGbNgTgJQQLMRMMTNVzvPsPbdsfPVsdVVZfPf"])
 (["lcCmmlpwwnwSjCHtFpCpHzCrZsVrBZZzdvDfVrsfZd"])
 (["lSHwnjpFmppHqppttttcFmnhMLGNRLhTMDqJLQNLLQNLhJ"])
 (["WqWfDWBjBjLbfcbbqGbWqQsrFFztsppMFCzgCJzJCrFpCM"])
 (["VRlhdHZTZVRRmZwlmFrJwFpMMDDrrrtJwg"])
 (["PPVddvvDZmRmHvndTHmLcbcjSjLQBGWGGQWSqP"])
 (["HHvgvwHMPMwHwmcRfJNFchFGNNCm"])
 (["BsTDsjzBCCBJGffN"])
 (["jznSnSdqzqnQTbdDljQjQSMHWWvvgWvtZlrWpPfWwtPr"])
 (["DJCJJCNjCDRfDfDRhDnNhfjFPgbGbddBTjFdTFTPbgGSdF"])
 (["cmMcMVqBZVcwsGFgGqgWdFqb"])
 (["vcZVzwmHVcrtrwMMvvmBHwNNCDpQRfhLhrNJNfJDDDRC"])
 (["VWSSScsncpDRdnsWsVncVzTwMMMHtMTrLTLMMVHM"])
 (["fjJvQqBCQNhfQlZZnqmFHLFMTFTzwzLzrHMB"])
 (["CqfjjQZJPjjvpRppDPgbnSnP"])
 (["tLnjNwjRWttdCwRLsfGzfzPbzbWbQQPT"])
 (["cvvBvlBrFrlTffsbfTqZ"])
 (["vmrFpsrvFMMMNwhtDwhN"])
 (["wzgRNqwtgzMWtqGwCssBBSBZnSRsrQQS"])
 (["bbjLTmpjpHcpVncVdmffPCDrjZDSDsZffDQC"])
 ...)
clj꞉aoc-2022.day04.solution꞉> 


(def input-real (str/trim (slurp "./src/aoc_2022/day04/input_real")))
#'aoc-2022.day04.solution/input-real
clj꞉aoc-2022.day04.solution꞉> 
(def pairs (for [pair (str/split input-real #"\n")]
             (into [] (for [sections (str/split pair #",")] sections))))
#'aoc-2022.day04.solution/pairs
clj꞉aoc-2022.day04.solution꞉> 
(def split-pairs (for [pair pairs]
                   (map #(str/split % #"-") pair)))
#'aoc-2022.day04.solution/split-pairs
clj꞉aoc-2022.day04.solution꞉> 
(defn subset-of-other [set-pair]
  (let [[a b] set-pair]
    (or (clojure.set/subset? a b) (clojure.set/subset? b a))))
#'aoc-2022.day04.solution/subset-of-other
clj꞉aoc-2022.day04.solution꞉> 
(->> (map #(Integer/parseInt %) (flatten split-pairs))
     (partition 2)
     (transpose)
     (apply map #(range %1 (+ %2 1)))
     (map set)
     (partition 2)
     (filter subset-of-other)
     (count))

595
clj꞉aoc-2022.day04.solution꞉> 
(defn overlap-at-all [set-pair]
  (let [[a b] set-pair]
    (not= #{} (clojure.set/intersection a b))))
#'aoc-2022.day04.solution/overlap-at-all
clj꞉aoc-2022.day04.solution꞉> 
(->> (map #(Integer/parseInt %) (flatten split-pairs))
     (partition 2)
     (transpose)
     (apply map #(range %1 (+ %2 1)))
     (map set)
     (partition 2)
     (filter overlap-at-all)
     (count))
952
clj꞉aoc-2022.day04.solution꞉> 
